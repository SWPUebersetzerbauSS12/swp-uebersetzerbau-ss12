; ModuleID = '3dArray.c'
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64"
target triple = "x86_64-pc-linux-gnu"

@.str = private unnamed_addr constant [5 x i8] c"OR:\0A\00"
@.str1 = private unnamed_addr constant [16 x i8] c"%d or %d is %d\0A\00"
@.str2 = private unnamed_addr constant [6 x i8] c"AND:\0A\00"
@.str3 = private unnamed_addr constant [17 x i8] c"%d and %d is %d\0A\00"

define i32 @main() nounwind {
  %1 = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %array = alloca [2 x [2 x [2 x i32]]], align 16
  store i32 0, i32* %1
  %2 = getelementptr inbounds [2 x [2 x [2 x i32]]]* %array, i32 0, i64 0
  %3 = getelementptr inbounds [2 x [2 x i32]]* %2, i32 0, i64 0
  %4 = getelementptr inbounds [2 x i32]* %3, i32 0, i64 0
  store i32 0, i32* %4
  %5 = getelementptr inbounds [2 x [2 x [2 x i32]]]* %array, i32 0, i64 0
  %6 = getelementptr inbounds [2 x [2 x i32]]* %5, i32 0, i64 1
  %7 = getelementptr inbounds [2 x i32]* %6, i32 0, i64 0
  store i32 1, i32* %7
  %8 = getelementptr inbounds [2 x [2 x [2 x i32]]]* %array, i32 0, i64 1
  %9 = getelementptr inbounds [2 x [2 x i32]]* %8, i32 0, i64 0
  %10 = getelementptr inbounds [2 x i32]* %9, i32 0, i64 0
  store i32 1, i32* %10
  %11 = getelementptr inbounds [2 x [2 x [2 x i32]]]* %array, i32 0, i64 1
  %12 = getelementptr inbounds [2 x [2 x i32]]* %11, i32 0, i64 1
  %13 = getelementptr inbounds [2 x i32]* %12, i32 0, i64 0
  store i32 1, i32* %13
  %14 = getelementptr inbounds [2 x [2 x [2 x i32]]]* %array, i32 0, i64 0
  %15 = getelementptr inbounds [2 x [2 x i32]]* %14, i32 0, i64 0
  %16 = getelementptr inbounds [2 x i32]* %15, i32 0, i64 1
  store i32 0, i32* %16
  %17 = getelementptr inbounds [2 x [2 x [2 x i32]]]* %array, i32 0, i64 0
  %18 = getelementptr inbounds [2 x [2 x i32]]* %17, i32 0, i64 1
  %19 = getelementptr inbounds [2 x i32]* %18, i32 0, i64 1
  store i32 0, i32* %19
  %20 = getelementptr inbounds [2 x [2 x [2 x i32]]]* %array, i32 0, i64 1
  %21 = getelementptr inbounds [2 x [2 x i32]]* %20, i32 0, i64 0
  %22 = getelementptr inbounds [2 x i32]* %21, i32 0, i64 1
  store i32 0, i32* %22
  %23 = getelementptr inbounds [2 x [2 x [2 x i32]]]* %array, i32 0, i64 1
  %24 = getelementptr inbounds [2 x [2 x i32]]* %23, i32 0, i64 1
  %25 = getelementptr inbounds [2 x i32]* %24, i32 0, i64 1
  store i32 1, i32* %25
  %26 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([5 x i8]* @.str, i32 0, i32 0))
  store i32 0, i32* %i, align 4
  br label %27

; <label>:27                                      ; preds = %50, %0
  %28 = load i32* %i, align 4
  %29 = icmp slt i32 %28, 2
  br i1 %29, label %30, label %53

; <label>:30                                      ; preds = %27
  store i32 0, i32* %j, align 4
  br label %31

; <label>:31                                      ; preds = %46, %30
  %32 = load i32* %j, align 4
  %33 = icmp slt i32 %32, 2
  br i1 %33, label %34, label %49

; <label>:34                                      ; preds = %31
  %35 = load i32* %i, align 4
  %36 = load i32* %j, align 4
  %37 = load i32* %j, align 4
  %38 = sext i32 %37 to i64
  %39 = load i32* %i, align 4
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds [2 x [2 x [2 x i32]]]* %array, i32 0, i64 %40
  %42 = getelementptr inbounds [2 x [2 x i32]]* %41, i32 0, i64 %38
  %43 = getelementptr inbounds [2 x i32]* %42, i32 0, i64 0
  %44 = load i32* %43
  %45 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([16 x i8]* @.str1, i32 0, i32 0), i32 %35, i32 %36, i32 %44)
  br label %46

; <label>:46                                      ; preds = %34
  %47 = load i32* %j, align 4
  %48 = add nsw i32 %47, 1
  store i32 %48, i32* %j, align 4
  br label %31

; <label>:49                                      ; preds = %31
  br label %50

; <label>:50                                      ; preds = %49
  %51 = load i32* %i, align 4
  %52 = add nsw i32 %51, 1
  store i32 %52, i32* %i, align 4
  br label %27

; <label>:53                                      ; preds = %27
  %54 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([6 x i8]* @.str2, i32 0, i32 0))
  store i32 0, i32* %i, align 4
  br label %55

; <label>:55                                      ; preds = %78, %53
  %56 = load i32* %i, align 4
  %57 = icmp slt i32 %56, 2
  br i1 %57, label %58, label %81

; <label>:58                                      ; preds = %55
  store i32 0, i32* %j, align 4
  br label %59

; <label>:59                                      ; preds = %74, %58
  %60 = load i32* %j, align 4
  %61 = icmp slt i32 %60, 2
  br i1 %61, label %62, label %77

; <label>:62                                      ; preds = %59
  %63 = load i32* %i, align 4
  %64 = load i32* %j, align 4
  %65 = load i32* %j, align 4
  %66 = sext i32 %65 to i64
  %67 = load i32* %i, align 4
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds [2 x [2 x [2 x i32]]]* %array, i32 0, i64 %68
  %70 = getelementptr inbounds [2 x [2 x i32]]* %69, i32 0, i64 %66
  %71 = getelementptr inbounds [2 x i32]* %70, i32 0, i64 1
  %72 = load i32* %71
  %73 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([17 x i8]* @.str3, i32 0, i32 0), i32 %63, i32 %64, i32 %72)
  br label %74

; <label>:74                                      ; preds = %62
  %75 = load i32* %j, align 4
  %76 = add nsw i32 %75, 1
  store i32 %76, i32* %j, align 4
  br label %59

; <label>:77                                      ; preds = %59
  br label %78

; <label>:78                                      ; preds = %77
  %79 = load i32* %i, align 4
  %80 = add nsw i32 %79, 1
  store i32 %80, i32* %i, align 4
  br label %55

; <label>:81                                      ; preds = %55
  ret i32 0
}

declare i32 @printf(i8*, ...)
