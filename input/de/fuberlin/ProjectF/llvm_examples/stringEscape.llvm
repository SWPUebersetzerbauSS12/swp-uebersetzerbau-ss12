; ModuleID = 'stringEscape.c'
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str = private unnamed_addr constant [3 x i8] c"1'\00", align 1
@.str1 = private unnamed_addr constant [3 x i8] c"2\22\00", align 1
@.str2 = private unnamed_addr constant [3 x i8] c"3?\00", align 1
@.str3 = private unnamed_addr constant [3 x i8] c"4\5C\00", align 1
@.str4 = private unnamed_addr constant [3 x i8] c"5\00\00", align 1
@.str5 = private unnamed_addr constant [3 x i8] c"6\07\00", align 1
@.str6 = private unnamed_addr constant [3 x i8] c"7\08\00", align 1
@.str7 = private unnamed_addr constant [3 x i8] c"8\0C\00", align 1
@.str8 = private unnamed_addr constant [3 x i8] c"9\0A\00", align 1
@.str9 = private unnamed_addr constant [4 x i8] c"10\0D\00", align 1
@.str10 = private unnamed_addr constant [4 x i8] c"11\09\00", align 1
@.str11 = private unnamed_addr constant [4 x i8] c"12\0B\00", align 1
@.str12 = private unnamed_addr constant [4 x i8] c"13â‚¬\00", align 1


define i32 @main() nounwind uwtable {
  %1 = alloca i32, align 4
  store i32 0, i32* %1
  %2 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([3 x i8]* @.str, i32 0, i32 0))
  %3 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([3 x i8]* @.str1, i32 0, i32 0))
  %4 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([3 x i8]* @.str2, i32 0, i32 0))
  %5 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([3 x i8]* @.str3, i32 0, i32 0))
  %6 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([3 x i8]* @.str4, i32 0, i32 0))
  %7 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([3 x i8]* @.str5, i32 0, i32 0))
  %8 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([3 x i8]* @.str6, i32 0, i32 0))
  %9 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([3 x i8]* @.str7, i32 0, i32 0))
  %10 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([3 x i8]* @.str8, i32 0, i32 0))
  %11 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @.str9, i32 0, i32 0))
  %12 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @.str10, i32 0, i32 0))
  %13 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @.str11, i32 0, i32 0))
  %14 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @.str12, i32 0, i32 0))
  ret i32 0
}

declare i32 @printf(i8*, ...)
